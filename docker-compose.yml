version: '3.8'

services:

    #----------- POSTGRESQL -------------#
    db:
        image: postgres:latest
        container_name: "db"
        restart: unless-stopped
        command: -p ${POSTGRES_PORT:?POSTGRES_PORT env var is missing}
        volumes:
            - postgresql_data:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT:?POSTGRES_PORT env var is missing}:${POSTGRES_PORT}"
        env_file:
            - ${DB_ENV_PATH:?DB_ENV_PATH env var is missing}
        networks:
            - ft_transcendence
    #-------------- BACKEND -------------#
    backend:
        image: "transcendence_backend"
        container_name: "backend"
        build:
            context: ./
            args:
              - NESTJS_PORT=${BACKEND_PORT:?BACKEND_PORT env var is missing}
            dockerfile: backend/Dockerfile
        restart: unless-stopped
        ports:
            - "${BACKEND_PORT:?BACKEND_PORT env var is missing}:${BACKEND_PORT}"
        env_file: # resolved from the Compose file’s parent folder
            - ${BACK_ENV_PATH:?BACK_ENV_PATH env var is missing}
        depends_on:
            - db
        networks:
            - ft_transcendence
    #-------------- FRONTEND ------------#
    frontend:
        image: "transcendence_frontend"
        container_name: "frontend"
        build:
            context: ./
            args:
                - VITE_PORT=${FRONTEND_PORT:?FRONTEND_PORT env var is missing}
            dockerfile: frontend/Dockerfile
        restart: unless-stopped
        ports: # resolved from the Compose file’s parent folder
            - "${FRONTEND_PORT:?FRONTEND_PORT en var is missing}:${FRONTEND_PORT}"
        env_file:
            - ${FRONT_ENV_PATH:?FRONT_ENV_PATH env var is missing}
        depends_on:
            - backend
        networks:
            - ft_transcendence

# --------------- NETWORKS --------------#
networks:
    ft_transcendence:
        driver: bridge # default


# --------------- VOLUMES ---------------#
volumes:
        postgresql_data:
            driver: local
