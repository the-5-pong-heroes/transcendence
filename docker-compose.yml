version: '3.9'

services:
    #----------- POSTGRESQL -------------#
    db:
        image: postgres:latest
        container_name: "db"
        restart: unless-stopped
        command: -p ${POSTGRES_PORT:?POSTGRES_PORT env var is missing}
        volumes:
            - postgresql_data:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT:?POSTGRES_PORT env var is missing}:${POSTGRES_PORT}"
        env_file:
            - ./env/db.example.env
        networks:
            - ft_transcendence
    #-------------- BACKEND -------------#
    backend:
        build:
            context: ./backend
            args:
              - NESTJS_PORT=${BACKEND_PORT:?BACKEND_PORT env var is missing}
            dockerfile: Dockerfile
        command: node dist/main.js
        container_name: "backend"
        restart: unless-stopped
        volumes:
            - ./backend:/app
        ports:
            - "${BACKEND_PORT:?BACKEND_PORT env var is missing}:${BACKEND_PORT}"
        env_file: # resolved from the Compose file’s parent folder
            - ./env/backend.example.env
        depends_on:
            - db
        networks:
            - ft_transcendence
    #-------------- FRONTEND ------------#
    # frontend:
    #     build:
    #       context: ./frontend
    #       dockerfile: Dockerfile
    #     command: TODO
    #     container_name: "frontend"
    #     restart: unless-stopped
    #     # no need for volumes here
    #     ports: # resolved from the Compose file’s parent folder
    #         - "${FRONTEND_PORT:?FRONTEND_PORT en var is missing}:${FRONTEND_PORT}"
    #     env_file:
    #         - ./env/frontend.example.env
    #     depends_on:
    #         - backend
    #     networks:
    #         - ft_transcendence


# --------------- NETWORKS --------------#
networks:
    ft_transcendence:
        driver: bridge # default


# --------------- VOLUMES ---------------#
volumes:
    postgresql_data:
